---
- name: Cosmos-validator-watcher
  block:
    - name: Cosmos-validator-watcher| Reload containers if necessary | {{ item.name | replace('-node', '') }}
      ansible.builtin.meta: flush_handlers

    - name: Cosmos-validator-watcher | Set tendermint subcommand | {{ item.name | replace('-node', '') }}
      when: "'v2' in testnet_container_name"
      ansible.builtin.set_fact:
        subcommand: comet

    - name: Cosmos-validator-watcher | Set tendermint subcommand | {{ item.name | replace('-node', '') }}
      when: not 'v2' in testnet_container_name
      ansible.builtin.set_fact:
        subcommand: tendermint

    - name: Cosmos-validator-watcher | Get validator infos | {{ item.name | replace('-node', '') }}
      containers.podman.podman_container_exec:
        name: "{{ testnet_container_name }}"
        command: /app/node {{ subcommand }} show-validator --home /config
        workdir: /app
      register: validator_infos
      changed_when: false

    - name: Cosmos-validator-watcher | Get validator pubkey | {{ item.name | replace('-node', '') }}
      containers.podman.podman_container_exec:
        name: "{{ testnet_container_name }}"
        command: /app/node debug pubkey '{{ validator_infos.stdout }}' --home /config
        workdir: /app
      register: validator_pubkey
      changed_when: false

    - name: Cosmos-validator-watcher | Set fact clean_validator_pubkey | {{ item.name | replace('-node', '') }}
      ansible.builtin.set_fact:
        clean_validator_pubkey: "{{ validator_pubkey.stdout | regex_search('Address: ([A-F0-9]+)', '\\1') | first }}"

    - name: Cosmos-validator-watcher | Set fact quadlet_command
      ansible.builtin.set_fact:
        quadlet_command:
          - --http-addr :{{ testnet_container_watcher_port }}
          - --node http://localhost:26657
          - --validator {{ clean_validator_pubkey }}:testnet-{{ testnet_container_name | replace('-node', '') }}

    - name: Cosmos-validator-watcher | Quadlet pod file | {{ item.name | replace('-node', '') }}
      containers.podman.podman_container:
        name: cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}
        image: "{{ testnet_cosmos_validator_watcher_image }}"
        state: quadlet
        pod: "{{ testnet_container_name }}"
        command: "{{ quadlet_command }}"
        ports:
          - "{{ testnet_container_watcher_port }}:{{ testnet_container_watcher_port }}"
        label:
          app: cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}
        quadlet_options:
          - |

            [Unit]
            Description=cosmos-validator-watcher for {{ testnet_container_name | replace('-node', '') }}
            After=network-online.target
            Wants=network-online.target

            [Service]
            Restart=always
            RestartSec=3
            TimeoutStartSec=900

            [Install]
            WantedBy=default.target
      notify: Restart cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}

    - name: Cosmos-validator-watcher | Quadlet container file | {{ item.name | replace('-node', '') }}
      containers.podman.podman_container:
        name: cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}
        image: "{{ testnet_cosmos_validator_watcher_image }}"
        state: quadlet
        pod: "{{ testnet_container_name }}"
        command: "{{ quadlet_command }}"
        ports:
          - "{{ testnet_container_watcher_port }}:{{ testnet_container_watcher_port }}"
        label:
          app: cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}
        quadlet_options:
          - |

            [Unit]
            Description=cosmos-validator-watcher for {{ testnet_container_name | replace('-node', '') }}
            After=network-online.target
            Wants=network-online.target

            [Service]
            Restart=always
            RestartSec=3
            TimeoutStartSec=900

            [Install]
            WantedBy=default.target
      notify: Restart cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}

    - name: Cosmos-validator-watcher | Enable systemd service | {{ item.name | replace('-node', '') }}
      ansible.builtin.systemd:
        name: cosmos-validator-watcher-{{ testnet_container_name | replace('-node', '') }}
        enabled: true
        state: started
        daemon_reload: true

    - name: Alloy | Edit configuration
      ansible.builtin.blockinfile:
        path: "{{ validator_observability_alloy_config_path }}/config.alloy"
        marker: /// {mark} ANSIBLE MANAGED BLOCK - cosmos_sdk_testnet_{{ item.name | replace('-node', '') }}
        append_newline: true
        block: |
          prometheus.scrape "cosmos_sdk_testnet_{{ item.name | replace('-node', '') | replace('-', '_') }}" {
            clustering {
              enabled = true
            }
            targets = [{
              __address__ = "{{ ansible_hostname }}:{{ testnet_container_watcher_port }}",
            }]
            forward_to      = [prometheus.remote_write.victoriametrics.receiver]
          }

      notify: Restart alloy

  rescue:
    - name: Healthchecks.io | Send a fail signal
      when: semaphore_scheduled is defined and semaphore_scheduled | bool
      community.healthchecksio.ping:
        state: present
        uuid: "{{ testnet_healthchecks_uuid }}"
        signal: fail
        api_key: "{{ healthchecksio_api_key }}"
      changed_when: false

    - name: Something went wrong
      ansible.builtin.fail:
        msg: An error occured
      when: not ansible_check_mode
