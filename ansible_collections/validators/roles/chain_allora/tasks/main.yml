---
- name: Set facts
  ansible.builtin.set_fact:
    global_chain_id: "{{ chain_allora_chain_id }}"
    global_cosmos_validator_watcher_image: "{{ chain_allora_cosmos_validator_watcher_image }}"
    global_user: "{{ chain_allora_user }}"
    global_network: "{{ chain_allora_network }}"
    global_cosmovisor_upgrade_name: "{{ chain_allora_cosmovisor_upgrade_name }}"
    global_cosmovisor_version: "{{ chain_allora_cosmovisor_version }}"
    global_appd_repo_url: "{{ chain_allora_appd_repo_url }}"
    global_appd_name: "{{ chain_allora_appd_name }}"
    global_appd_version: "{{ chain_allora_appd_version }}"
    global_appd_p2p_port: "{{ chain_allora_appd_p2p_port }}"
    global_appd_rpc_port: "{{ chain_allora_appd_rpc_port }}"
    global_appd_prometheus_port: "{{ chain_allora_appd_prometheus_port }}"
    global_home_dir: /home/{{ chain_allora_user }}/.allorad
    # global_watcher_quadlet_command:
    #   - --http-addr :{{ chain_allora_watcher_prometheus_port }}
    #   - --node http://localhost:{{ chain_allora_appd_rpc_port }}
    #   - --validator {{ chain_allora_validator_pubkey }}:{{ chain_allora_chain_id }}
    global_configuration_app_lines: "{{ chain_allora_configuration_app_lines }}"
    global_configuration_client_lines: "{{ chain_allora_configuration_client_lines }}"
    global_configuration_config_lines: "{{ chain_allora_configuration_config_lines }}"

- name: Install required packages
  ansible.builtin.apt:
    name:
      - build-essential
      - git
      - make
      - lz4
      - gcc
    state: present

- name: Create user
  ansible.builtin.user:
    name: "{{ chain_allora_user }}"
    group: users
    system: true
    create_home: true
    state: present

- name: Add user to systemd-journal group
  ansible.builtin.user:
    name: "{{ chain_allora_user }}"
    groups: systemd-journal
    append: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
    mode: "0700"
    owner: "{{ chain_allora_user }}"
    group: users
  loop:
    - "/home/{{ chain_allora_user }}/go/bin"

- name: Install Go
  ansible.builtin.include_role:
    name: install_go

- name: Allorad + Cosmovisor
  ansible.builtin.include_role:
    name: binarybuilders.validators.global
    tasks_from: appd-binary-cosmovisor.yml

- name: Allorad configuration
  ansible.builtin.include_role:
    name: binarybuilders.validators.global
    tasks_from: appd-configuration.yml

# - name: Cosmos-validator-watcher
#   ansible.builtin.include_role:
#     name: binarybuilders.validators.global
#     tasks_from: cosmos-validator-watcher.yml

# - name: Validator-observability
#   ansible.builtin.include_role:
#     name: binarybuilders.validators.observability
#   vars:
#     observability_alerts: "{{ chain_allora_alerts }}"
#     observability_chain_id: "{{ chain_allora_chain_id }}"
#     observability_prometheus_sdk_prometheus_port: "{{ chain_allora_allorad_prometheus_port }}"
#     observability_prometheus_watcher_prometheus_port: "{{ chain_allora_watcher_prometheus_port }}"

- name: Deploy justfile
  ansible.builtin.template:
    src: justfile.j2
    dest: /home/{{ chain_allora_user }}/justfile
    owner: "{{ chain_allora_user }}"
    group: users
    mode: "0644"

- name: Configure osmosis shell
  ansible.builtin.include_role:
    name: binarybuilders.servers.configure_hosts
    tasks_from: shell.yml
  vars:
    configure_hosts_users_username: "{{ chain_allora_user }}"
