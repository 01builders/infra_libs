---
- name: Celestia-node | Set vars
  ansible.builtin.set_fact:
    service_name: bridge-celestia-node-{{ chain_celestia_chain_id }}

- name: Celestia-node | Set testnet vars
  when: chain_celestia_network == "mocha"
  ansible.builtin.set_fact:
    chain_celestia_bridge_conf_dir: .celestia-bridge-{{ chain_celestia_chain_id }}
    flags:
      - --archival
      - --p2p.network {{ chain_celestia_network }}
      - --core.ip 127.0.0.1
      - --core.rpc.port {{ chain_celestia_bridge_app_rpc_port }}
      - --core.grpc.port {{ chain_celestia_bridge_app_grpc_port }}
      - --metrics
      - --metrics.tls=false
      - --metrics.endpoint otel.celestia-mocha.com

- name: Celestia-node | Set mainnet vars
  when: chain_celestia_network == "mainnet"
  ansible.builtin.set_fact:
    chain_celestia_bridge_conf_dir: .celestia-bridge
    flags:
      - --archival
      - --p2p.network {{ chain_celestia_network }}
      - --core.ip 127.0.0.1
      - --core.rpc.port {{ chain_celestia_bridge_app_rpc_port }}
      - --core.grpc.port {{ chain_celestia_bridge_app_grpc_port }}
      # - --core.ip rpc.celestia.pops.one
      # - --core.rpc.port 26657
      # - --core.grpc.port 9090
      - --metrics
      - --metrics.tls=false
      - --metrics.endpoint 127.0.0.1:{{ chain_celestia_bridge_otlp_http_port }}

- name: Celestia-node | Ensure celestia-node repository is present
  ansible.builtin.git:
    repo: https://github.com/celestiaorg/celestia-node.git
    dest: "/home/{{ chain_celestia_user }}/celestia-node"
    version: "tags/{{ chain_celestia_bridge_version }}"
  become: true
  become_user: "{{ chain_celestia_user }}"
  register: repo_cloned

- name: Celestia-node | Build
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-node
    cmd: |
      source ~/.bash_profile
      make build
      make cel-key
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true
  notify: Restart {{ service_name }}

- name: Celestia-node | Build
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-node
    cmd: |
      source ~/.bash_profile
      make install
  args:
    executable: /bin/bash
  changed_when: true

- name: Celestia-node | Copy binary to home folder
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.copy:
    src: /usr/local/bin/celestia
    dest: /home/{{ chain_celestia_user }}/go/bin/celestia
    remote_src: true
    mode: "0755"
    owner: "{{ chain_celestia_user }}"
    group: users
  notify: Restart {{ service_name }}

- name: Celestia-node | Remove binary from /usr/local/bin
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.file:
    path: /usr/local/bin/celestia
    state: absent

- name: Celestia-node | Firewall Allow Incoming on public interface
  community.general.ufw:
    rule: allow
    interface: "{{ public_interface }}"
    direction: in
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop:
    - { port: "2121", proto: tcp } # P2P
    - { port: "2121", proto: udp } # P2P

- name: Celestia-node | Check configuration file
  ansible.builtin.stat:
    path: /home/{{ chain_celestia_user }}/{{ chain_celestia_bridge_conf_dir }}/.lock
  register: node_init

- name: Celestia-node | Initialize Celestia Bridge node
  when: not node_init.stat.exists # noqa: no-handler
  ansible.builtin.pause:
    prompt: You must manually init the bridge node. Please log into the server and execute `celestia bridge init --p2p.network {{ chain_celestia_chain_id }}`, then backup the mnemonic.

- name: Celestia-node | Create systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/{{ service_name }}.service
    content: |
      [Unit]
      Description=Celestia-bridge-{{ chain_celestia_chain_id }} (Data Availability)
      After=network.target

      [Service]
      Type=simple
      ExecStart=/home/{{ chain_celestia_user }}/go/bin/celestia bridge start {{ flags | join(' ') }}
      User={{ chain_celestia_user }}
      Group=users
      Restart=always
      RestartSec=3
      TimeoutStartSec=900
      LimitNOFILE=1400000

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  notify: Restart {{ service_name }}

- name: Celestia-node | Add sudoers file
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ chain_celestia_user }}-bridge-{{ chain_celestia_chain_id }}"
    content: |
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl start {{ service_name }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl stop {{ service_name }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart {{ service_name }}.service
      {{ chain_celestia_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl status {{ service_name }}.service
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Celestia-node | Enable systemd service
  ansible.builtin.systemd:
    name: "{{ service_name }}"
    enabled: true
    state: started
    daemon_reload: true
