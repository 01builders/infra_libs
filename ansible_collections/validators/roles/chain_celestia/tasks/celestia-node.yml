---
- name: Celestia-node | Init notify list
  ansible.builtin.set_fact:
    node_service_list: []

- name: Celestia-node | Set vars (bootstrapper)
  when: chain_celestia_bootstrapper is defined and chain_celestia_bootstrapper | bool
  ansible.builtin.set_fact:
    service_bootstrapper: Restart celestia-bootstrapper-{{ chain_celestia_chain_id }}

- name: Celestia-node | Append bootstrapper to notify list
  when: chain_celestia_bootstrapper is defined and chain_celestia_bootstrapper | bool
  ansible.builtin.set_fact:
    node_service_list: "{{ node_service_list + [service_bootstrapper] }}"

- name: Celestia-node | Set vars (bridge)
  when: chain_celestia_bridge is defined and chain_celestia_bridge | bool
  ansible.builtin.set_fact:
    service_bridge: Restart celestia-bridge-{{ chain_celestia_chain_id }}

- name: Celestia-node | Append bridge to notify list
  when: chain_celestia_bridge is defined and chain_celestia_bridge | bool
  ansible.builtin.set_fact:
    node_service_list: "{{ node_service_list + [service_bridge] }}"

- name: Celestia-node | Ensure celestia-node repository is present
  ansible.builtin.git:
    repo: https://github.com/celestiaorg/celestia-node.git
    dest: "/home/{{ chain_celestia_user }}/celestia-node"
    version: "tags/{{ chain_celestia_bridge_version }}"
  become: true
  become_user: "{{ chain_celestia_user }}"
  register: repo_cloned

- name: Celestia-node | Build
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-node
    cmd: |
      source ~/.bash_profile
      nice -n 19 make build
      nice -n 19 make cel-key
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_celestia_user }}"
  changed_when: true

- name: Celestia-node | Build
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ chain_celestia_user }}/celestia-node
    cmd: |
      source ~/.bash_profile
      nice -n 19 make install
  args:
    executable: /bin/bash
  changed_when: true
  notify: "{{ item }}"
  loop: "{{ node_service_list }}"

- name: Celestia-node | Copy binary to home folder
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.copy:
    src: /usr/local/bin/celestia
    dest: /home/{{ chain_celestia_user }}/go/bin/celestia
    remote_src: true
    mode: "0755"
    owner: "{{ chain_celestia_user }}"
    group: users
  notify: "{{ item }}"
  loop: "{{ node_service_list }}"

- name: Celestia-node | Remove binary from /usr/local/bin
  when: repo_cloned.changed # noqa: no-handler
  ansible.builtin.file:
    path: /usr/local/bin/celestia
    state: absent
