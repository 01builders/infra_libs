# use with https://github.com/casey/just
#
# Celestia validator operations
#

# Set the shell to bash with error handling
# set shell := ["bash", "-euo", "pipefail"]

# Default recipe to show available commands
default:
    @just --list

# Variables
{% if chain_celestia_appd is defined and chain_celestia_appd | bool %}
appd_service := "appd-{{ chain_celestia_chain_id }}"
{% endif %}
{% if chain_celestia_bridge is defined and chain_celestia_bridge | bool %}
bridge_node_service := "celestia-bridge-{{ chain_celestia_chain_id }}"
{% endif %}
{% if chain_celestia_tmkms is defined and chain_celestia_tmkms | bool %}
tmkms_service := "tmkms-{{ chain_celestia_chain_id }}"
{% endif %}
log_lines := "100"

{% if chain_celestia_appd is defined and chain_celestia_appd | bool %}
# Start appd_service systemd service
appd-start:
    @echo "Starting {% raw %}{{ appd_service }}{% endraw %}..."
    sudo /usr/bin/systemctl start {% raw %}{{ appd_service }}.service
{% endraw %}
    @sleep 2
    @just appd-status

# Stop appd_service systemd service
appd-stop:
    @echo "Stopping {% raw %}{{ appd_service }}{% endraw %}..."
    sudo /usr/bin/systemctl stop {% raw %}{{ appd_service }}.service
{% endraw %}
    @sleep 2
    @just appd-status

# Restart appd_service systemd service
appd-restart:
    @echo "Restarting {% raw %}{{ appd_service }}{% endraw %}..."
    sudo /usr/bin/systemctl restart {% raw %}{{ appd_service }}.service
{% endraw %}
    @sleep 2
    @just appd-status

# Check appd_service systemd service status
appd-status:
    @echo "{% raw %}{{ appd_service }}{% endraw %} status:"
    sudo /usr/bin/systemctl status {% raw %}{{ appd_service }}.service
{% endraw %}

# Consult appd_service systemd service logs
appd-logs:
    journalctl --unit={% raw %}{{ appd_service }} --follow
{% endraw %}

{% endif %}
{% if chain_celestia_bridge is defined and chain_celestia_bridge | bool %}
# Start bridge systemd service
bridge-start:
    @echo "Starting {{ chain_celestia_network }}..."
    sudo /usr/bin/systemctl start {% raw %}{{ bridge_node_service }}.service
{% endraw %}
    @sleep 2
    @just bridge-status

# Stop bridge systemd service
bridge-stop:
    @echo "Stopping {% raw %}{{ bridge_node_service }}{% endraw %}..."
    sudo /usr/bin/systemctl stop {% raw %}{{ bridge_node_service }}.service
{% endraw %}
    @sleep 2
    @just bridge-status
# Restart bridge systemd service
bridge-restart:
    @echo "Restarting {% raw %}{{ bridge_node_service }}{% endraw %}..."
    sudo /usr/bin/systemctl restart {% raw %}{{ bridge_node_service }}.service
{% endraw %}
    @sleep 2
    @just bridge-status

# Check bridge systemd service status
bridge-status:
    @echo "{% raw %}{{ bridge_node_service }}{% endraw %} status:"
    sudo /usr/bin/systemctl status {% raw %}{{ bridge_node_service }}.service
{% endraw %}

# Consult bridge systemd service logs
bridge-logs:
    journalctl --unit={% raw %}{{ bridge_node_service }} --follow
{% endraw %}
{% endif %}

{% if chain_celestia_tmkms is defined and chain_celestia_tmkms | bool %}
# Start tmkms systemd service
tmkms-start:
    @echo "Starting {% raw %}{{ tmkms_service }}{% endraw %}..."
    sudo /usr/bin/systemctl start {% raw %}{{ tmkms_service }}.service
{% endraw %}
    @sleep 2
    @just tmkms-status

# Stop tmkms systemd service
tmkms-stop:
    @echo "Stopping {% raw %}{{ tmkms_service }}{% endraw %}..."
    sudo /usr/bin/systemctl stop {% raw %}{{ tmkms_service }}.service
{% endraw %}
    @sleep 2
    @just tmkms-status

# Restart tmkms systemd service
tmkms-restart:
    @echo "Restarting {% raw %}{{ tmkms_service }}{% endraw %}..."
    sudo /usr/bin/systemctl restart {% raw %}{{ tmkms_service }}.service
{% endraw %}
    @sleep 2
    @just tmkms-status

# Check tmkms systemd service status
tmkms-status:
    @echo "{% raw %}{{ tmkms_service }}{% endraw %} status:"
    sudo /usr/bin/systemctl status {% raw %}{{ tmkms_service }}.service
{% endraw %}

# Consult tmkms systemd service logs
tmkms-logs:
    journalctl --unit={% raw %}{{ tmkms_service }} --follow
{% endraw %}
{% endif %}
