---
- name: Slinky | Ensure repository is present
  ansible.builtin.git:
    repo: https://github.com/skip-mev/slinky.git
    dest: "/home/{{ global_user }}/slinky_repo"
    version: "tags/{{ chain_neutron_slinky_version }}"
  become: true
  become_user: "{{ global_user }}"
  register: repo_slinky_cloned

- name: Slinky | Build and install
  when: repo_slinky_cloned.changed # noqa: no-handler
  ansible.builtin.shell:
    chdir: /home/{{ global_user }}/slinky_repo
    cmd: |
      source ~/.bash_profile
      nice -n 19 make install
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ global_user }}"
  changed_when: true
  notify: Restart slinky-{{ global_chain_id }}

- name: Slinky | Create systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/slinky-{{ global_chain_id }}.service
    content: |
      [Unit]
      Description=Slinky {{ global_network }} (chain_id: {{ global_chain_id }})
      After=network.target

      [Service]
      Type=simple
      ExecStart=/home/{{ global_user }}/go/bin/slinky --host="{{ chain_neutron_slinky_host }}" --port="{{ chain_neutron_slinky_port }}" --market-map-endpoint="{{ chain_neutron_grpc_host }}:{{ chain_neutron_grpc_port }}" --metrics-enabled=true --metrics-prometheus-address="0.0.0.0:{{ chain_neutron_slinky_port_prometheus_port }}" --log-disable-file-rotation=true
      User={{ global_user }}
      Group=users
      Restart=always
      RestartSec=3
      TimeoutStartSec=900
      LimitNOFILE=1400000

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  notify: Restart slinky-{{ global_chain_id }}

- name: Slinky | Enable systemd service
  ansible.builtin.systemd:
    name: "slinky-{{ global_chain_id }}"
    enabled: true
    daemon_reload: true

- name: Slinky | Add sudoers file
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ global_user }}-slinky-{{ global_chain_id }}"
    content: |
      {{ global_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl start slinky-{{ global_chain_id }}.service
      {{ global_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl stop slinky-{{ global_chain_id }}.service
      {{ global_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart slinky-{{ global_chain_id }}.service
      {{ global_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl status slinky-{{ global_chain_id }}.service
    mode: "0440"
    validate: /usr/sbin/visudo -cf %s

- name: Slinky | Alloy | Edit configuration
  ansible.builtin.blockinfile:
    path: "{{ chain_neutron_alloy_config_path }}/config.alloy"
    marker: /// {mark} ANSIBLE MANAGED BLOCK - {{ global_chain_id }} - slinky
    append_newline: true
    block: |
      prometheus.scrape "slinky_{{ global_chain_id | replace('-', '_') }}" {
        clustering {
          enabled = true
        }
        targets = [{
          __address__ = "{{ ansible_hostname }}:{{ chain_neutron_slinky_port_prometheus_port }}",
        }]
        forward_to      = [prometheus.remote_write.victoriametrics.receiver]
      }

  notify: Restart alloy

- name: Slinky | Deploy slinky alerts
  when: chain_neutron_alerts is defined and chain_neutron_alerts | bool
  ansible.builtin.template:
    src: slinky-alerts.yml.j2
    dest: "{{ chain_neutron_vmalert_config_path }}/neutron-slinky-{{ chain_neutron_chain_id }}.yml"
    mode: "0644"
  delegate_to: observability
  notify: Restart vmalert
