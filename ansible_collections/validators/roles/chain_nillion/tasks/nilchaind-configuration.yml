---
- name: Configuration | Firewall Allow Incoming on public interface
  community.general.ufw:
    rule: allow
    interface: "{{ public_interface }}"
    direction: in
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop:
    - { port: "{{ chain_nillion_nilchaind_p2p_port }}", proto: tcp }

- name: Configuration | Check configuration file
  ansible.builtin.stat:
    path: "{{ chain_nillion_home_dir }}/config/config.toml"
  register: node_init

- name: Configuration | Initialize Validator node
  when: not node_init.stat.exists # noqa: no-handler
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      source ~/.bash_profile
      {{ chain_nillion_binary_name }} init binary-builders --chain-id {{ chain_nillion_chain_id }}
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ chain_nillion_user }}"
  changed_when: true

# - name: Configuration | Bootstrap addrbook.json
#   when: not node_init.stat.exists # noqa: no-handler
#   ansible.builtin.get_url:
#     # url: https://snapshots.polkachu.com/addrbook/xion/addrbook.json
#     dest: "{{ chain_nillion_home_dir }}/config/addrbook.json"
#     mode: "0644"
#     force: true
#   become: true
#   become_user: "{{ chain_nillion_user }}"

# - name: Configuration | Bootstrap genesis.json
#   when: not node_init.stat.exists # noqa: no-handler
#   ansible.builtin.get_url:
#     # url: https://snapshots.polkachu.com/genesis/xion/genesis.json
#     dest: "{{ chain_nillion_home_dir }}/config/genesis.json"
#     mode: "0644"
#     force: true
#   become: true
#   become_user: "{{ chain_nillion_user }}"

- name: Configuration | app.toml
  ansible.builtin.replace:
    path: "{{ chain_nillion_home_dir }}/config/app.toml"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  notify: Restart {{ chain_nillion_binary_name }}-{{ chain_nillion_network }}
  loop:
    # Set gas price
    - regexp: ^(minimum-gas-prices\s*=\s*).*$
      line: \1"0.025unil"
    # Tendermint block pruning
    - regexp: ^(pruning\s*=\s*).*$
      line: \1"custom"
    # Tendermint block pruning
    - regexp: ^(pruning-keep-recent\s*=\s*).*$
      line: \1"100"
    # Tendermint block pruning
    - regexp: ^(pruning-keep-every\s*=\s*).*$
      line: \1"0"
    # Tendermint block pruning
    - regexp: ^(pruning-interval\s*=\s*).*$
      line: \1"10"
    # Tendermint block pruning
    - regexp: ^(min-retain-blocks\s*=\s*).*$
      line: \1"1"

- name: Configuration | config.toml
  ansible.builtin.replace:
    path: "{{ chain_nillion_home_dir }}/config/config.toml"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  notify: Restart {{ chain_nillion_binary_name }}-{{ chain_nillion_network }}
  loop:
    # Listen on 0.0.0.0 (RPC)
    - regexp: (^\[rpc\]\n\n# TCP or UNIX socket address for the RPC server to listen on\n)laddr = "tcp://[^"]*"
      line: \1laddr = "tcp://0.0.0.0:{{ chain_nillion_nilchaind_rpc_port }}"
    # Listen on 0.0.0.0 (P2P)
    - regexp: (^\[p2p\]\n\n# Address to listen for incoming connections\n)laddr = "tcp://[^"]*"
      line: \1laddr = "tcp://0.0.0.0:{{ chain_nillion_nilchaind_p2p_port }}"
    # Set indexer to null
    - regexp: ^(indexer\s*=\s*).*$
      line: \1"null"
    # Enable prometheus
    - regexp: ^(prometheus\s*=\s*).*$
      line: \1true
    # Listen on 0.0.0.0 (Prometheus)
    - regexp: ^(prometheus_listen_addr\s*=\s*).*$
      line: \1":{{ chain_nillion_nilchaind_prometheus_port }}"
    # Discard abci responses (saves disk space)
    - regexp: ^(discard_abci_responses\s*=\s*).*$
      line: \1true
    # Timeout commit
    - regexp: ^(timeout_commit\s*=\s*).*$
      line: \1"1s"
    # Set seeds
    - regexp: ^(seeds\s*=\s*).*$
      line: \1"ceb159a85ca603121225865c801cc97653c82820@84.32.32.150:18600,20e1000e88125698264454a884812746c2eb4807@seeds.lavenderfive.com:28156"
    # Set persistent_peers
    - regexp: ^(persistent_peers\s*=\s*).*$
      line: \1"41c28139a0381b04c9354b2f6c974f880bf8c843@184.107.185.205:18600,a8038f2de293de4f28797e1e069bbed858dfb9c6@45.250.252.75:56316"
    # Set external_address
    - regexp: ^(external_address=\s*=\s*).*$
      line: \1"188.245.251.53:{{ chain_nillion_nilchaind_p2p_port }}"

- name: Configuration | client.toml
  ansible.builtin.replace:
    path: "{{ chain_nillion_home_dir }}/config/client.toml"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.line }}"
  notify: Restart {{ chain_nillion_binary_name }}-{{ chain_nillion_network }}
  loop:
    # Listen on 0.0.0.0 (RPC)
    - regexp: ^(chain-id\s*=\s*).*$
      line: \1"{{ chain_nillion_chain_id }}"
