---
- name: Set facts
  ansible.builtin.set_fact:
    global_chain_id: "{{ chain_nomic_chain_id }}"
    global_cosmos_validator_watcher_image: "{{ chain_nomic_cosmos_validator_watcher_image }}"
    global_user: "{{ chain_nomic_user }}"
    global_alerts: "{{ chain_nomic_alerts }}"
    global_network: "{{ chain_nomic_network }}"
    global_cosmovisor_upgrade_name: "{{ chain_nomic_cosmovisor_upgrade_name }}"
    global_cosmovisor_version: "{{ chain_nomic_cosmovisor_version }}"
    global_appd_name: "{{ chain_nomic_appd_name }}"
    global_appd_version: "{{ chain_nomic_appd_version }}"
    global_appd_repo_url: "{{ chain_nomic_appd_repo_url }}"
    global_appd_p2p_port: "{{ chain_nomic_appd_p2p_port }}"
    global_appd_rpc_port: "{{ chain_nomic_appd_rpc_port }}"
    global_appd_prometheus_port: "{{ chain_nomic_appd_prometheus_port }}"
    global_home_dir: /home/{{ chain_nomic_user }}/.nomic
    global_watcher_prometheus_port: "{{ chain_nomic_watcher_prometheus_port }}"
    global_watcher_quadlet_command:
      - --http-addr :{{ chain_nomic_watcher_prometheus_port }}
      - --node https://nomic-rpc.polkachu.com
      - --node http://localhost:{{ chain_nomic_appd_rpc_port }}
      - --validator {{ chain_nomic_validator_pubkey }}:{{ chain_nomic_chain_id }}
    global_configuration_app_lines: "{{ chain_nomic_configuration_app_lines }}"
    global_configuration_client_lines: "{{ chain_nomic_configuration_client_lines }}"
    global_configuration_config_lines: "{{ chain_nomic_configuration_config_lines }}"

- name: Install required packages
  ansible.builtin.apt:
    name:
      - build-essential
      - git
      - make
      - lz4
      - gcc
      - pkg-config
      - libssl-dev
      - clang
    state: present

- name: Create user
  ansible.builtin.user:
    name: "{{ chain_nomic_user }}"
    group: users
    system: true
    create_home: true
    state: present

- name: Add user to systemd-journal group
  ansible.builtin.user:
    name: "{{ chain_nomic_user }}"
    groups: systemd-journal
    append: true

- name: Check if cargo is installed
  ansible.builtin.stat:
    path: /home/{{ chain_nomic_user }}/.cargo/bin/cargo
  changed_when: false
  register: cargo_exists
  ignore_errors: true

- name: Download cargo installer
  when: not cargo_exists.stat.exists
  ansible.builtin.get_url:
    url: https://sh.rustup.rs
    dest: /tmp/{{ chain_nomic_user }}_sh.rustup.rs
    mode: '0755'
    force: true
  become: true
  become_user: "{{ chain_nomic_user }}"

- name: Install rust/cargo
  when: not cargo_exists.stat.exists
  ansible.builtin.command: /tmp/{{ chain_nomic_user }}_sh.rustup.rs -y
  changed_when: true
  become: true
  become_user: "{{ chain_nomic_user }}"

- name: .bash_profile
  ansible.builtin.blockinfile:
    path: /home/{{ chain_nomic_user }}/.bash_profile
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Cargo paths"
    create: true
    block: |
      export PATH=$PATH:/home/{{ chain_nomic_user }}/.cargo/bin
    mode: "0644"
    owner: "{{ chain_nomic_user }}"
    group: users

- name: Fish config
  ansible.builtin.copy:
    dest: ~/.config/fish/conf.d/rust.fish
    content: |
      # Path Configuration
      fish_add_path /home/{{ install_go_user }}/.cargo/bin
    mode: "644"
  become: true
  become_user: "{{ install_go_user }}"


- name: Nomic binary
  ansible.builtin.include_tasks:
    file: appd-binary-rust.yml

# - name: Nomicd configuration
#   ansible.builtin.include_role:
#     name: binarybuilders.validators.global
#     tasks_from: appd-configuration.yml

# - name: Cosmos-validator-watcher
#   ansible.builtin.include_role:
#     name: binarybuilders.validators.global
#     tasks_from: cosmos-validator-watcher.yml

# - name: Validator-observability
#   ansible.builtin.include_role:
#     name: binarybuilders.validators.observability
#   vars:
#     observability_alerts: "{{ global_alerts }}"
#     observability_chain_id: "{{ global_chain_id }}"
#     observability_prometheus_sdk_prometheus_port: "{{ global_appd_prometheus_port }}"
#     observability_prometheus_watcher_prometheus_port: "{{ global_watcher_prometheus_port }}"

# - name: Deploy justfile
#   ansible.builtin.template:
#     src: justfile.j2
#     dest: /home/{{ chain_nomic_user }}/justfile
#     owner: "{{ chain_nomic_user }}"
#     group: users
#     mode: "0644"

- name: Binary | Ensure service is started
  ansible.builtin.systemd:
    name: "appd-{{ global_chain_id }}"
    state: started
