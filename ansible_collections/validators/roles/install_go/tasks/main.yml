---
- name: Check if Go wanted version is installed
  ansible.builtin.shell: |
    source /home/{{ install_go_user }}/.bash_profile
    go version
  args:
    executable: /bin/bash
  register: check_go
  failed_when: false
  changed_when: false

- name: Install go {{ install_go_version }}
  when: install_go_version not in check_go.stdout
  block:
    - name: Set architecture fact
      ansible.builtin.set_fact:
        go_arch: "{{ 'arm64' if ansible_architecture in ['arm64', 'aarch64'] else 'amd64' }}"

    - name: Download Golang {{ install_go_version }}
      ansible.builtin.get_url:
        url: "https://golang.org/dl/go{{ install_go_version }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp/go{{ install_go_version }}.linux-{{ go_arch }}.tar.gz"
        mode: "0644"

    - name: Create directories
      ansible.builtin.file:
        path: /usr/local/go/{{ install_go_version }}
        state: directory
        mode: "0755"

    - name: Extract Golang to /usr/local/{{ install_go_version }}
      ansible.builtin.unarchive:
        src: "/tmp/go{{ install_go_version }}.linux-{{ go_arch }}.tar.gz"
        dest: /usr/local/go/{{ install_go_version }}
        remote_src: true

    - name: Remove Go tarball
      ansible.builtin.file:
        path: "/tmp/go{{ install_go_version }}.linux-{{ go_arch }}.tar.gz"
        state: absent

  rescue:
    - name: Something went wrong
      ansible.builtin.fail:
        msg: An error occured
      when: not ansible_check_mode

- name: .bash_profile
  ansible.builtin.blockinfile:
    path: /home/{{ install_go_user }}/.bash_profile
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Go paths"
    create: true
    block: |
      export PATH=$PATH:/usr/local/go/{{ install_go_version }}/go/bin:/home/{{ install_go_user }}/go/bin
    mode: "0644"
    owner: "{{ install_go_user }}"
    group: users

- name: Fish config
  ansible.builtin.copy:
    dest: ~/.config/fish/conf.d/go.fish
    content: |
      # Path Configuration
      fish_add_path /usr/local/go/{{ install_go_version }}/go/bin
      fish_add_path /home/{{ install_go_user }}/go/bin
    mode: "644"
  become: true
  become_user: "{{ install_go_user }}"

- name: Source .bash_profile and check Go version
  ansible.builtin.shell: |
    source /home/{{ install_go_user }}/.bash_profile
    go version
  args:
    executable: /bin/bash
  register: go_version_output
  failed_when: "'go version' not in go_version_output.stdout"
  changed_when: false

- name: Print Go version
  ansible.builtin.debug:
    msg: "{{ go_version_output.stdout }}"
